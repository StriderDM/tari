########################################################################################################################
#                                                                                                                      #
#                                      The Tari Network Configuration File                                             #
#                                                                                                                      #
########################################################################################################################

# This file carries all the configuration options for running Tari-related nodes and infrastructure in one single
# file. As you'll notice, almost all configuraton options are commented out. This is because they are either not
# needed, are for advanced users that know what they want to tweak, or are already set at their default values.  If
# things are working fine, then there's no need to change anything here.
#
# Each major section is clearly marked so that you can quickly find the section you're looking for. This first
# section holds configuration options that are common to all sections.

# A note about Logging - The logger is initialised before the configuration file is loaded. For this reason, logging
# is not configured here, but in `~/.tari/log4rs.yml` (*nix / OsX) or `%HOME%/.tari/log4rs.yml` (Windows) by
# default, or the location specified in the TARI_LOGFILE environment variable.

[common]
# Tari is a 100% peer-to-peer network, so there are no servers to hold messages for you while you're offline.
# Instead, we rely on our peers to hold messages for us while we're offline. This settings sets maximum size of the
# message cache that for holding our peers' messages, in MB.
#message_cache_size = 10

# When storing messages for peers, hold onto them for at most this long before discarding them. The default is 1440
# minutes = or 24 hrs.
#message_cache_ttl = 1440

# When first logging onto the Tari network, you need to find a few peers to bootstrap the process. In the absence of
# any servers, this is a little more challenging than usual. Our best strategy is just to try and connect to the peers
# you knew about last time you ran the software. But what about when you run the software for the first time? That's
# where this whitelist comes in. It's a list of known Tari nodes that are likely to be around for a long time and that
# new nodes can use to introduce themselves to the network.
peer_whitelist = [ "8.8.8.8", "6.6.6.6", "7.7.7.7"] # TODO actually populate this with a list of bootstrap nodes

# The peer database list is stored in a database file at this location
#peer_database = "~/.tari/peers"

# If peer nodes spam you with messages, or are otherwise badly behaved, they will be added to your blacklist and banned
# You can set a time limit to release that ban (in minutes), or otherwise ban them for life (-1). The default is to
# ban them for 10 days.
#blacklist_ban_period = 1440


########################################################################################################################
#                                                                                                                      #
#                                          Wallet Configuration Options                                                #
#                                                                                                                      #
########################################################################################################################

# If you are not running a wallet from this configuration, you can simply leave everything in this section commented out

[wallet]

# Enable the gRPC server for the wallet library. Set this to true if you want to enable third-party wallet software
#grpc_enabled = true

# The socket to expose for the gRPC wallet server. This value is ignored if grpc_enabled is false.
# Valid values here are IPv4 and IPv6 TCP sockets, local unix sockets (e.g. "ipc://base-node-gprc.sock.100")
#grpc_address = "tcp://127.0.0.1:80400"

# The folder to store your local key data and transaction history. DO NOT EVER DELETE THIS FILE unless you
#  a) have backed up your seed phrase and
#  b) know what you are doing!
#wallet_file = "~/.tari/wallet/wallet.dat"

########################################################################################################################
#                                                                                                                      #
#                                          Base Node Configuration Options                                             #
#                                                                                                                      #
########################################################################################################################

# If you are not running a Tari Base node, you can simply leave everything in this section commented out. Base nodes
# help maintain the security of the Tari token and are the surest way to preserve your privacy and be 100% sure that
# no-one is cheating you out of your money.

[base_node]

# Select the netowrk to connect to. Valid options are:
#   mainnet - the "real" Tari network (default)
#   testnet - the Tari test net
#   localnet - a local blockchain environmment
#network = "mainnet"

# The folder to use to store the blockchain database
#blochchain-data = "~/.tari/chain_data/"

# The address and port to listen for peer connections. This is the address that is advertised on the network so that
# peers can find you. You may specify more than one address here
#[[base_node.control-address]]
#address = "tcp://0.0.0.0:80898"

# Enable the gRPC server for the base node. Set this to true if you want to enable third-party wallet software
#grpc_enabled = false

# The socket to expose for the gRPC base node server. This value is ignored if grpc_enabled is false.
# Valid values here are IPv4 and IPv6 TCP sockets, local unix sockets (e.g. "ipc://base-node-gprc.sock.100")
#grpc_address = "tcp://127.0.0.1:80410"

########################################################################################################################
#                                                                                                                      #
#                                         Validator Node Configuration Options                                         #
#                                                                                                                      #
########################################################################################################################

# If you are not , you can simply leave everything in this section commented out. Base nodes
# help maintain the security of the Tari token and are the surest way to preserve your privacy and be 100% sure that
# no-one is cheating you out of your money.

[validator_node]

# Enable the gRPC server for the base node. Set this to true if you want to enable third-party wallet software
#grpc_enabled = false

# The socket to expose for the gRPC base node server. This value is ignored if grpc_enabled is false.
# Valid values here are IPv4 and IPv6 TCP sockets, local unix sockets (e.g. "ipc://base-node-gprc.sock.100")
#grpc_address = "tcp://127.0.0.1:80420"